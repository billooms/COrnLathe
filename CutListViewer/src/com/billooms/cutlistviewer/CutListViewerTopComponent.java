package com.billooms.cutlistviewer;

import com.billooms.cutlist.CutList;
import com.billooms.cutlist.Inst;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component for viewing the CutList (pseudo instructions).
 *
 * @author Bill Ooms. Copyright 2015 Studio of Bill Ooms. All rights reserved.
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
@ConvertAsProperties(
    dtd = "-//com.billooms.cutlistviewer//CutListViewer//EN",
    autostore = false
)
@TopComponent.Description(
    preferredID = "CutListViewerTopComponent",
    iconBase = "com/billooms/cutlistviewer/CutList16.png",
    persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.billooms.cutlistviewer.CutListViewerTopComponent")
@ActionReference(path = "Menu/Window", position = 770)
@TopComponent.OpenActionRegistration(
    displayName = "#CTL_CutListViewerAction",
    preferredID = "CutListViewerTopComponent"
)
@Messages({
  "CTL_CutListViewerAction=CutListViewer",
  "CTL_CutListViewerTopComponent=CutListViewer Window",
  "HINT_CutListViewerTopComponent=This is a CutListViewer window"
})
public final class CutListViewerTopComponent extends TopComponent implements PropertyChangeListener {

  private final CutList cutList = Lookup.getDefault().lookup(CutList.class);

  public CutListViewerTopComponent() {
    initComponents();
    setName(Bundle.CTL_CutListViewerTopComponent());
    setToolTipText(Bundle.HINT_CutListViewerTopComponent());

  }

  /** Update the text. */
  private void updateAll() {
    if (cutList.length() <= 0) {
      textArea.setText("(CutList is empty)");
    } else {
      textArea.setText("");
      for (Inst inst : cutList.getAll()) {
        textArea.append(inst.toString() + "\n");
      }
    }
  }

  @Override
  public void propertyChange(PropertyChangeEvent evt) {
//		System.out.println("CutListViewerTopComponent.propertyChange: " + evt.getPropertyName() + " " + evt.getOldValue() + " " + evt.getNewValue());
    updateAll();
  }

  /** This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    textArea = new javax.swing.JTextArea();

    setLayout(new java.awt.BorderLayout());

    textArea.setColumns(20);
    textArea.setRows(5);
    jScrollPane1.setViewportView(textArea);

    add(jScrollPane1, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTextArea textArea;
  // End of variables declaration//GEN-END:variables
  @Override
  public void componentOpened() {
    updateAll();
    cutList.addPropertyChangeListener(this);
  }

  @Override
  public void componentClosed() {
    cutList.removePropertyChangeListener(this);
  }

  void writeProperties(java.util.Properties p) {
    // better to version settings since initial version as advocated at
    // http://wiki.apidesign.org/wiki/PropertyFiles
    p.setProperty("version", "1.0");
    // TODO store your settings
  }

  void readProperties(java.util.Properties p) {
    String version = p.getProperty("version");
    // TODO read your settings according to their version
  }
}
